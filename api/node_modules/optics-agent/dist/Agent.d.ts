export declare const MIN_REPORT_INTERVAL_MS: number;
export declare const DEFAULT_REPORT_INTERVAL_MS: number;
export interface ClientVersion {
    client_name: string;
    client_version: string;
}
export interface AgentConfig {
    apiKey: string;
    debugFn?: (message: string) => null;
    normalizeVersion?: (ClientRequest) => ClientVersion;
    normalizeQuery?: any;
    endpointUrl?: string;
    proxyUrl?: string;
    reportIntervalMs?: number;
    printReports?: boolean;
    reportTraces?: boolean;
    reportVariables?: boolean;
}
export default class Agent {
    private disabled;
    private schema;
    private debugFn;
    private apiKey;
    private normalizeVersion;
    private normalizeQuery;
    private endpointUrl;
    private proxyUrl;
    private printReports;
    private reportTraces;
    private reportVariables;
    private reportIntervalMs;
    private reportStartTime;
    private reportStartHrTime;
    private pendingResults;
    private reportTimer;
    constructor(config?: AgentConfig);
    instrumentSchema(schema: any): any;
    middleware(): (_req: any, _res: any, next: any) => void;
    instrumentHapiServer(server: any): void;
    context(req: any): any;
    private sendStatsReport();
}
